cmake_minimum_required(VERSION 3.0.0)
project(mycv VERSION 0.1.0)

include(CTest)
enable_testing()

set(OPENCVPKGS_BASE_DIRS /Users/chengong.cg/Git/opencv-3.4.5)
set(OPENCVPKGS_INCLUDE_DIRS ${OPENCVPKGS_BASE_DIRS}/include)
set(OPENCVPKGS_BUILD_DIRS ${OPENCVPKGS_BASE_DIRS}/build)
set(OPENCVPKGS_MODULES_INCLUDE_DIRS ${OPENCVPKGS_BASE_DIRS}/modules)
set(OPENCVPKGS_CORE_INCLUDE_DIRS ${OPENCVPKGS_MODULES_INCLUDE_DIRS}/core/include)
set(OPENCVPKGS_VIDEOIO_INCLUDE_DIRS ${OPENCVPKGS_MODULES_INCLUDE_DIRS}/videoio/include)
set(OPENCVPKGS_IMGPROC_INCLUDE_DIRS ${OPENCVPKGS_MODULES_INCLUDE_DIRS}/imgproc/include)
set(OPENCVPKGS_IMGCODEC_INCLUDE_DIRS ${OPENCVPKGS_MODULES_INCLUDE_DIRS}/imgcodecs/include)
set(OPENCVPKGS_HIGHGUI_INCLUDE_DIRS ${OPENCVPKGS_MODULES_INCLUDE_DIRS}/highgui/include)
set(OPENCVPKGS_FEATURES2D_INCLUDE_DIRS ${OPENCVPKGS_MODULES_INCLUDE_DIRS}/features2d/include)
set(OPENCVPKGS_FLANN_INCLUDE_DIRS ${OPENCVPKGS_MODULES_INCLUDE_DIRS}/flann/include)

set(OPENCVPKGS_CONTRIB_DIRS ${OPENCVPKGS_BASE_DIRS}/opencv_contrib-3.4.5)
set(OPENCVPKGS_CONTRIB_MODULES_INCLUDE_DIRS ${OPENCVPKGS_CONTRIB_DIRS}/modules)
set(OPENCVPKGS_XFEATURES2D_INCLUDE_DIRS ${OPENCVPKGS_CONTRIB_MODULES_INCLUDE_DIRS}/xfeatures2d/include)

set(OPENCVPKGS_TOTAL_INCLUDE_DIRS
    ${OPENCVPKGS_INCLUDE_DIRS} 
    ${OPENCVPKGS_BUILD_DIRS}
    ${OPENCVPKGS_CORE_INCLUDE_DIRS}
    ${OPENCVPKGS_VIDEOIO_INCLUDE_DIRS}
    ${OPENCVPKGS_IMGPROC_INCLUDE_DIRS}
    ${OPENCVPKGS_IMGCODEC_INCLUDE_DIRS}
    ${OPENCVPKGS_HIGHGUI_INCLUDE_DIRS}
    ${OPENCVPKGS_FEATURES2D_INCLUDE_DIRS}
    ${OPENCVPKGS_FLANN_INCLUDE_DIRS}
    ${OPENCVPKGS_XFEATURES2D_INCLUDE_DIRS})

set(OPENCVPKGS_LIBRARY_DIRS ${OPENCVPKGS_BASE_DIRS}/build/lib)

set(OPENCV_TOTAL_LIBRARY 
    libopencv_videoio.dylib
    libopencv_core.dylib
    libopencv_imgproc.dylib
    libopencv_imgcodecs.dylib
    libopencv_highgui.dylib
    libopencv_features2d.dylib
    libopencv_xfeatures2d.dylib)

message ("pkg include dirs: ${OPENCVPKGS_TOTAL_INCLUDE_DIRS}")
message ("pkg lib dirs: ${OPENCVPKGS_LIBRARY_DIRS}")
message ("pkg libs: ${OPENCV_TOTAL_LIBRARY}")

set(LOCAL_INCLUDES ${PROJECT_SOURCE_DIR}/include)
set(LOCAL_SRC ${PROJECT_SOURCE_DIR}/src)

include_directories(
    ${LOCAL_INCLUDES}
    ${OPENCVPKGS_TOTAL_INCLUDE_DIRS})

link_directories( 
    ${OPENCVPKGS_LIBRARY_DIRS})

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
OPTION(OPENCV_ENABLE_NONFREE "Enable non-free algorithms" ON)

add_executable(mycv
    main.cpp
    src/FeatureDetector.cpp)

target_link_libraries(mycv ${OPENCV_TOTAL_LIBRARY})

set(CPACK_PROJECT_NAME ${PROJECT_NAME})
set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
include(CPack)
